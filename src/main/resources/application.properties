# Configurações do banco de dados da aplicação
spring.datasource.platform=${DATABASE_PLATFORM}
spring.datasource.driver-class-name=${DATABASE_DRIVER}
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DATABASE_USER}
spring.datasource.password=${DATABASE_PASSWORD}

# Kafka
spring.kafka.bootstrap-servers=${KAFKA_HOST:localhost:9092}

# Formato da chave (String) recebida!
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Formato da mensagem \ evento (JSON) recebida(o)!
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer

# Identificador do grupo de consumo
spring.kafka.consumer.group-id=${KAFKA_CONSUMER_GROUP_ID:microservice-transacao}

# Modelo de coleta do consumidor (latest, earliest, none)
spring.kafka.consumer.auto-offset-reset=${KAFKA_AUTO-OFFSET-RESET:earliest}

spring.kafka.topics.transacao=${KAFKA_TOPICS_TRANSACAO:transacoes}

# Security / OAuth / Resouce Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${AUTHORIZATION_SERVER_ISSUER_URI:http://host.docker.internal:18080/auth/realms/microservicetransacao}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${AUTHORIZATION_SERVER_JWK_SET_URI:http://host.docker.internal:18080/auth/realms/microservicetransacao/protocol/openid-connect/certs}